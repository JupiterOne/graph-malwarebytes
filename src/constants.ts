import {
  generateRelationshipType,
  RelationshipClass,
  StepEntityMetadata,
  StepRelationshipMetadata,
} from '@jupiterone/integration-sdk-core';

export const DEFAULT_SCANNED_SINCE_DAYS = 7;
export const DEFAULT_FINDINGS_SINCE_DAYS = 7;

export const steps = {
  ACCOUNT: 'fetch-account',
  GROUPS: 'fetch-groups',
  ENDPOINTS: 'fetch-endpoints',
  CONFIGURATIONS: 'fetch-configurations',
  SCAN_FINDINGS: 'fetch-scan-findings',
};

export const ACCOUNT_ENTITY_DATA_KEY = 'entity:account';
export const SERVICE_ENTITY_DATA_KEY = 'entity:service';

type EntityConstantKeys =
  | 'ACCOUNT'
  | 'GROUP'
  | 'CONFIGURATION'
  | 'HOST_AGENT'
  | 'FINDING';

export const entities: Record<EntityConstantKeys, StepEntityMetadata> = {
  ACCOUNT: {
    resourceName: 'Account',
    _type: 'malwarebytes_account',
    _class: 'Account',
  },
  GROUP: {
    resourceName: 'Group',
    _type: 'malwarebytes_group',
    _class: 'Group',
  },
  CONFIGURATION: {
    resourceName: 'Configuration',
    _type: 'malwarebytes_configuration',
    _class: 'Configuration',
  },
  HOST_AGENT: {
    resourceName: 'HostAgent',
    _type: 'malwarebytes_agent',
    _class: ['HostAgent'],
    partial: true,
  },
  FINDING: {
    resourceName: 'Finding',
    _type: 'malwarebytes_finding',
    _class: 'Finding',
    partial: true,
  },
};

export const MAPPED_HOST_AGENT_PROTECTS_ENDPOINT = generateRelationshipType(
  RelationshipClass.PROTECTS,
  entities.HOST_AGENT._type,
  'USER_ENDPOINT',
);

type RelationshipConstantKeys =
  | 'ACCOUNT_HAS_GROUP'
  | 'ACCOUNT_HAS_HOST_AGENT'
  | 'GROUP_HAS_CONFIGURATION'
  | 'GROUP_HAS_HOST_AGENT'
  | 'HOST_AGENT_PROTECTS_ENDPOINT'
  | 'HOST_AGENT_IDENTIFIED_FINDING';

export const relationships: Record<
  RelationshipConstantKeys,
  StepRelationshipMetadata
> = {
  ACCOUNT_HAS_GROUP: {
    _type: 'malwarebytes_account_has_group',
    _class: RelationshipClass.HAS,
    sourceType: entities.ACCOUNT._type,
    targetType: entities.GROUP._type,
  },
  ACCOUNT_HAS_HOST_AGENT: {
    _type: 'malwarebytes_account_has_agent',
    _class: RelationshipClass.HAS,
    sourceType: entities.ACCOUNT._type,
    targetType: entities.HOST_AGENT._type,
  },
  GROUP_HAS_CONFIGURATION: {
    _type: 'malwarebytes_group_has_configuration',
    _class: RelationshipClass.HAS,
    sourceType: entities.GROUP._type,
    targetType: entities.CONFIGURATION._type,
  },
  GROUP_HAS_HOST_AGENT: {
    _type: 'malwarebytes_group_has_agent',
    _class: RelationshipClass.HAS,
    sourceType: entities.GROUP._type,
    targetType: entities.HOST_AGENT._type,
  },
  HOST_AGENT_PROTECTS_ENDPOINT: {
    _type: 'malwarebytes_agent_protects_USER_ENDPOINT',
    _class: RelationshipClass.PROTECTS,
    sourceType: entities.HOST_AGENT._type,
    targetType: 'USER_ENDPOINT',
  },
  HOST_AGENT_IDENTIFIED_FINDING: {
    _type: 'malwarebytes_agent_identified_finding',
    _class: RelationshipClass.IDENTIFIED,
    sourceType: entities.HOST_AGENT._type,
    targetType: entities.FINDING._type,
  },
};
